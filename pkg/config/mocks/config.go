// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/config/config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCfgCreator is a mock of CfgCreator interface.
type MockCfgCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCfgCreatorMockRecorder
}

// MockCfgCreatorMockRecorder is the mock recorder for MockCfgCreator.
type MockCfgCreatorMockRecorder struct {
	mock *MockCfgCreator
}

// NewMockCfgCreator creates a new mock instance.
func NewMockCfgCreator(ctrl *gomock.Controller) *MockCfgCreator {
	mock := &MockCfgCreator{ctrl: ctrl}
	mock.recorder = &MockCfgCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCfgCreator) EXPECT() *MockCfgCreatorMockRecorder {
	return m.recorder
}

// ConfigFileExists mocks base method.
func (m *MockCfgCreator) ConfigFileExists(filePath string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigFileExists", filePath)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigFileExists indicates an expected call of ConfigFileExists.
func (mr *MockCfgCreatorMockRecorder) ConfigFileExists(filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigFileExists", reflect.TypeOf((*MockCfgCreator)(nil).ConfigFileExists), filePath)
}

// GetConfigFilePath mocks base method.
func (m *MockCfgCreator) GetConfigFilePath() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigFilePath")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigFilePath indicates an expected call of GetConfigFilePath.
func (mr *MockCfgCreatorMockRecorder) GetConfigFilePath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigFilePath", reflect.TypeOf((*MockCfgCreator)(nil).GetConfigFilePath))
}

// WriteFile mocks base method.
func (m *MockCfgCreator) WriteFile(filePath string, yamlData []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteFile", filePath, yamlData)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteFile indicates an expected call of WriteFile.
func (mr *MockCfgCreatorMockRecorder) WriteFile(filePath, yamlData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteFile", reflect.TypeOf((*MockCfgCreator)(nil).WriteFile), filePath, yamlData)
}
